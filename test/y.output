语法

    0 $accept: Program $end

    1 Program: translation_unit

    2 primary_expression: IDENTIFIER
    3                   | TRUE
    4                   | FALSE
    5                   | CONSTANT_INT
    6                   | CONSTANT_DOUBLE
    7                   | '(' expression ')'

    8 postfix_expression: primary_expression
    9                   | postfix_expression '[' expression ']'
   10                   | postfix_expression '(' ')'
   11                   | postfix_expression '(' argument_expression_list ')'
   12                   | postfix_expression INC_OP
   13                   | postfix_expression DEC_OP

   14 argument_expression_list: assignment_expression
   15                         | argument_expression_list ',' assignment_expression

   16 unary_expression: postfix_expression
   17                 | INC_OP unary_expression
   18                 | DEC_OP unary_expression
   19                 | unary_operator unary_expression

   20 unary_operator: '+'
   21               | '-'
   22               | '~'
   23               | '!'

   24 multiplicative_expression: unary_expression
   25                          | multiplicative_expression '*' unary_expression
   26                          | multiplicative_expression '/' unary_expression
   27                          | multiplicative_expression '%' unary_expression

   28 additive_expression: multiplicative_expression
   29                    | additive_expression '+' multiplicative_expression
   30                    | additive_expression '-' multiplicative_expression

   31 shift_expression: additive_expression
   32                 | shift_expression LEFT_OP additive_expression
   33                 | shift_expression RIGHT_OP additive_expression

   34 relational_expression: shift_expression
   35                      | relational_expression '<' shift_expression
   36                      | relational_expression '>' shift_expression
   37                      | relational_expression LE_OP shift_expression
   38                      | relational_expression GE_OP shift_expression

   39 equality_expression: relational_expression
   40                    | equality_expression EQ_OP relational_expression
   41                    | equality_expression NE_OP relational_expression

   42 and_expression: equality_expression
   43               | and_expression '&' equality_expression

   44 exclusive_or_expression: and_expression
   45                        | exclusive_or_expression '^' and_expression

   46 inclusive_or_expression: exclusive_or_expression
   47                        | inclusive_or_expression '|' exclusive_or_expression

   48 logical_and_expression: inclusive_or_expression
   49                       | logical_and_expression AND_OP inclusive_or_expression

   50 logical_or_expression: logical_and_expression
   51                      | logical_or_expression OR_OP logical_and_expression

   52 assignment_expression: logical_or_expression
   53                      | unary_expression assignment_operator assignment_expression

   54 assignment_operator: '='
   55                    | MUL_ASSIGN
   56                    | DIV_ASSIGN
   57                    | MOD_ASSIGN
   58                    | ADD_ASSIGN
   59                    | SUB_ASSIGN
   60                    | LEFT_ASSIGN
   61                    | RIGHT_ASSIGN
   62                    | AND_ASSIGN
   63                    | XOR_ASSIGN
   64                    | OR_ASSIGN

   65 expression: assignment_expression
   66           | expression ',' assignment_expression

   67 declaration: type_specifier ';'
   68            | type_specifier init_declarator_list ';'

   69 init_declarator_list: init_declarator
   70                     | init_declarator_list ',' init_declarator

   71 init_declarator: declarator
   72                | declarator '=' initializer

   73 type_specifier: VOID
   74               | CHAR
   75               | INT
   76               | DOUBLE
   77               | BOOL

   78 declarator: IDENTIFIER
   79           | '(' declarator ')'
   80           | declarator '[' assignment_expression ']'
   81           | declarator '[' '*' ']'
   82           | declarator '[' ']'
   83           | declarator '(' wait_block parameter_list ')'
   84           | declarator '(' identifier_list ')'
   85           | declarator '(' ')'

   86 parameter_list: parameter_declaration
   87               | parameter_list ',' parameter_declaration

   88 parameter_declaration: type_specifier declarator
   89                      | type_specifier abstract_declarator
   90                      | type_specifier

   91 identifier_list: IDENTIFIER
   92                | identifier_list ',' IDENTIFIER

   93 abstract_declarator: '(' abstract_declarator ')'
   94                    | '[' ']'
   95                    | '[' assignment_expression ']'
   96                    | abstract_declarator '[' ']'
   97                    | abstract_declarator '[' assignment_expression ']'
   98                    | '[' '*' ']'
   99                    | abstract_declarator '[' '*' ']'
  100                    | '(' ')'
  101                    | '(' parameter_list ')'
  102                    | abstract_declarator '(' ')'
  103                    | abstract_declarator '(' parameter_list ')'

  104 initializer: assignment_expression
  105            | '{' child_block initializer_list '}' father_block
  106            | '{' child_block initializer_list ',' '}' father_block

  107 initializer_list: initializer
  108                 | designation initializer
  109                 | initializer_list ',' initializer
  110                 | initializer_list ',' designation initializer

  111 designation: designator_list '='

  112 designator_list: designator
  113                | designator_list designator

  114 designator: '[' logical_or_expression ']'
  115           | '.' IDENTIFIER

  116 statement: labeled_statement
  117          | compound_statement
  118          | expression_statement
  119          | selection_statement
  120          | iteration_statement
  121          | jump_statement

  122 labeled_statement: IDENTIFIER ':' statement
  123                  | CASE logical_or_expression ':' statement

  124 compound_statement: '{' '}'
  125                   | '{' block_item_list '}'

  126 block_item_list: block_item
  127                | block_item_list block_item

  128 block_item: declaration
  129           | statement

  130 expression_statement: ';'
  131                     | expression ';'

  132 selection_statement: IF '(' expression ')' statement
  133                    | IF '(' expression ')' statement ELSE statement
  134                    | SWITCH '(' expression ')' statement

  135 iteration_statement: WHILE '(' expression ')' statement
  136                    | DO statement WHILE '(' expression ')' ';'
  137                    | FOR '(' expression_statement expression_statement ')' statement
  138                    | FOR '(' expression_statement expression_statement expression ')' statement
  139                    | FOR '(' declaration expression_statement ')' statement
  140                    | FOR '(' declaration expression_statement expression ')' statement

  141 jump_statement: GOTO IDENTIFIER ';'
  142               | CONTINUE ';'
  143               | BREAK ';'
  144               | RETURN ';'
  145               | RETURN expression ';'

  146 translation_unit: external_declaration
  147                 | translation_unit external_declaration

  148 external_declaration: function_definition
  149                     | declaration

  150 function_definition: type_specifier declarator declaration_list compound_statement
  151                    | type_specifier declarator compound_statement

  152 declaration_list: declaration
  153                 | declaration_list declaration

  154 child_block: %empty

  155 wait_block: %empty

  156 father_block: %empty


终结语词，附有它们出现处的规则

    $end (0) 0
    '!' <gt> (33) 23
    '%' <gt> (37) 27
    '&' <gt> (38) 43
    '(' <gt> (40) 7 10 11 79 83 84 85 93 100 101 102 103 132 133 134 135 136 137 138 139 140
    ')' <gt> (41) 7 10 11 79 83 84 85 93 100 101 102 103 132 133 134 135 136 137 138 139 140
    '*' <gt> (42) 25 81 98 99
    '+' <gt> (43) 20 29
    ',' <gt> (44) 15 66 70 87 92 106 109 110
    '-' <gt> (45) 21 30
    '.' <gt> (46) 115
    '/' <gt> (47) 26
    ':' <gt> (58) 122 123
    ';' <gt> (59) 67 68 130 131 136 141 142 143 144 145
    '<' <gt> (60) 35
    '=' <gt> (61) 54 72 111
    '>' <gt> (62) 36
    '[' <gt> (91) 9 80 81 82 94 95 96 97 98 99 114
    ']' <gt> (93) 9 80 81 82 94 95 96 97 98 99 114
    '^' <gt> (94) 45
    '{' <gt> (123) 105 106 124 125
    '|' <gt> (124) 47
    '}' <gt> (125) 105 106 124 125
    '~' <gt> (126) 22
    error (256)
    IDENTIFIER <gt> (258) 2 78 91 92 115 122 141
    CONSTANT_INT <gt> (259) 5
    CONSTANT_DOUBLE <gt> (260) 6
    INC_OP <gt> (261) 12 17
    DEC_OP <gt> (262) 13 18
    LEFT_OP <gt> (263) 32
    RIGHT_OP <gt> (264) 33
    LE_OP <gt> (265) 37
    GE_OP <gt> (266) 38
    EQ_OP <gt> (267) 40
    NE_OP <gt> (268) 41
    AND_OP <gt> (269) 49
    OR_OP <gt> (270) 51
    MUL_ASSIGN <gt> (271) 55
    DIV_ASSIGN <gt> (272) 56
    MOD_ASSIGN <gt> (273) 57
    ADD_ASSIGN <gt> (274) 58
    SUB_ASSIGN <gt> (275) 59
    LEFT_ASSIGN <gt> (276) 60
    RIGHT_ASSIGN <gt> (277) 61
    AND_ASSIGN <gt> (278) 62
    XOR_ASSIGN <gt> (279) 63
    OR_ASSIGN <gt> (280) 64
    CHAR <gt> (281) 74
    INT <gt> (282) 75
    DOUBLE <gt> (283) 76
    VOID <gt> (284) 73
    BOOL <gt> (285) 77
    CASE <gt> (286) 123
    IF <gt> (287) 132 133
    ELSE <gt> (288) 133
    SWITCH <gt> (289) 134
    WHILE <gt> (290) 135 136
    DO <gt> (291) 136
    FOR <gt> (292) 137 138 139 140
    GOTO <gt> (293) 141
    CONTINUE <gt> (294) 142
    BREAK <gt> (295) 143
    RETURN <gt> (296) 144 145
    TRUE <gt> (297) 3
    FALSE <gt> (298) 4
    LOWER_THAN_ELSE (299)


非终结语词，附有它们出现处的规则

    $accept (68)
        on left: 0
    Program (69)
        on left: 1
        on right: 0
    primary_expression <gt> (70)
        on left: 2 3 4 5 6 7
        on right: 8
    postfix_expression <gt> (71)
        on left: 8 9 10 11 12 13
        on right: 9 10 11 12 13 16
    argument_expression_list <gt> (72)
        on left: 14 15
        on right: 11 15
    unary_expression <gt> (73)
        on left: 16 17 18 19
        on right: 17 18 19 24 25 26 27 53
    unary_operator <gt> (74)
        on left: 20 21 22 23
        on right: 19
    multiplicative_expression <gt> (75)
        on left: 24 25 26 27
        on right: 25 26 27 28 29 30
    additive_expression <gt> (76)
        on left: 28 29 30
        on right: 29 30 31 32 33
    shift_expression <gt> (77)
        on left: 31 32 33
        on right: 32 33 34 35 36 37 38
    relational_expression <gt> (78)
        on left: 34 35 36 37 38
        on right: 35 36 37 38 39 40 41
    equality_expression <gt> (79)
        on left: 39 40 41
        on right: 40 41 42 43
    and_expression <gt> (80)
        on left: 42 43
        on right: 43 44 45
    exclusive_or_expression <gt> (81)
        on left: 44 45
        on right: 45 46 47
    inclusive_or_expression <gt> (82)
        on left: 46 47
        on right: 47 48 49
    logical_and_expression <gt> (83)
        on left: 48 49
        on right: 49 50 51
    logical_or_expression <gt> (84)
        on left: 50 51
        on right: 51 52 114 123
    assignment_expression <gt> (85)
        on left: 52 53
        on right: 14 15 53 65 66 80 95 97 104
    assignment_operator <gt> (86)
        on left: 54 55 56 57 58 59 60 61 62 63 64
        on right: 53
    expression <gt> (87)
        on left: 65 66
        on right: 7 9 66 131 132 133 134 135 136 138 140 145
    declaration <gt> (88)
        on left: 67 68
        on right: 128 139 140 149 152 153
    init_declarator_list <gt> (89)
        on left: 69 70
        on right: 68 70
    init_declarator <gt> (90)
        on left: 71 72
        on right: 69 70
    type_specifier <gt> (91)
        on left: 73 74 75 76 77
        on right: 67 68 88 89 90 150 151
    declarator <gt> (92)
        on left: 78 79 80 81 82 83 84 85
        on right: 71 72 79 80 81 82 83 84 85 88 150 151
    parameter_list <gt> (93)
        on left: 86 87
        on right: 83 87 101 103
    parameter_declaration <gt> (94)
        on left: 88 89 90
        on right: 86 87
    identifier_list <gt> (95)
        on left: 91 92
        on right: 84 92
    abstract_declarator <gt> (96)
        on left: 93 94 95 96 97 98 99 100 101 102 103
        on right: 89 93 96 97 99 102 103
    initializer <gt> (97)
        on left: 104 105 106
        on right: 72 107 108 109 110
    initializer_list <gt> (98)
        on left: 107 108 109 110
        on right: 105 106 109 110
    designation <gt> (99)
        on left: 111
        on right: 108 110
    designator_list <gt> (100)
        on left: 112 113
        on right: 111 113
    designator <gt> (101)
        on left: 114 115
        on right: 112 113
    statement <gt> (102)
        on left: 116 117 118 119 120 121
        on right: 122 123 129 132 133 134 135 136 137 138 139 140
    labeled_statement <gt> (103)
        on left: 122 123
        on right: 116
    compound_statement <gt> (104)
        on left: 124 125
        on right: 117 150 151
    block_item_list <gt> (105)
        on left: 126 127
        on right: 125 127
    block_item <gt> (106)
        on left: 128 129
        on right: 126 127
    expression_statement <gt> (107)
        on left: 130 131
        on right: 118 137 138 139 140
    selection_statement <gt> (108)
        on left: 132 133 134
        on right: 119
    iteration_statement <gt> (109)
        on left: 135 136 137 138 139 140
        on right: 120
    jump_statement <gt> (110)
        on left: 141 142 143 144 145
        on right: 121
    translation_unit <gt> (111)
        on left: 146 147
        on right: 1 147
    external_declaration <gt> (112)
        on left: 148 149
        on right: 146 147
    function_definition <gt> (113)
        on left: 150 151
        on right: 148
    declaration_list <gt> (114)
        on left: 152 153
        on right: 150 153
    child_block (115)
        on left: 154
        on right: 105 106
    wait_block (116)
        on left: 155
        on right: 83
    father_block (117)
        on left: 156
        on right: 105 106


状态 0

    0 $accept: . Program $end

    CHAR    偏移，并进入状态 1
    INT     偏移，并进入状态 2
    DOUBLE  偏移，并进入状态 3
    VOID    偏移，并进入状态 4
    BOOL    偏移，并进入状态 5

    Program               转到状态 6
    declaration           转到状态 7
    type_specifier        转到状态 8
    translation_unit      转到状态 9
    external_declaration  转到状态 10
    function_definition   转到状态 11


状态 1

   74 type_specifier: CHAR .

    $default  使用规则 74 以归约 (type_specifier)


状态 2

   75 type_specifier: INT .

    $default  使用规则 75 以归约 (type_specifier)


状态 3

   76 type_specifier: DOUBLE .

    $default  使用规则 76 以归约 (type_specifier)


状态 4

   73 type_specifier: VOID .

    $default  使用规则 73 以归约 (type_specifier)


状态 5

   77 type_specifier: BOOL .

    $default  使用规则 77 以归约 (type_specifier)


状态 6

    0 $accept: Program . $end

    $end  偏移，并进入状态 12


状态 7

  149 external_declaration: declaration .

    $default  使用规则 149 以归约 (external_declaration)


状态 8

   67 declaration: type_specifier . ';'
   68            | type_specifier . init_declarator_list ';'
  150 function_definition: type_specifier . declarator declaration_list compound_statement
  151                    | type_specifier . declarator compound_statement

    IDENTIFIER  偏移，并进入状态 13
    ';'         偏移，并进入状态 14
    '('         偏移，并进入状态 15

    init_declarator_list  转到状态 16
    init_declarator       转到状态 17
    declarator            转到状态 18


状态 9

    1 Program: translation_unit .
  147 translation_unit: translation_unit . external_declaration

    CHAR    偏移，并进入状态 1
    INT     偏移，并进入状态 2
    DOUBLE  偏移，并进入状态 3
    VOID    偏移，并进入状态 4
    BOOL    偏移，并进入状态 5

    $default  使用规则 1 以归约 (Program)

    declaration           转到状态 7
    type_specifier        转到状态 8
    external_declaration  转到状态 19
    function_definition   转到状态 11


状态 10

  146 translation_unit: external_declaration .

    $default  使用规则 146 以归约 (translation_unit)


状态 11

  148 external_declaration: function_definition .

    $default  使用规则 148 以归约 (external_declaration)


状态 12

    0 $accept: Program $end .

    $default  接受


状态 13

   78 declarator: IDENTIFIER .

    $default  使用规则 78 以归约 (declarator)


状态 14

   67 declaration: type_specifier ';' .

    $default  使用规则 67 以归约 (declaration)


状态 15

   79 declarator: '(' . declarator ')'

    IDENTIFIER  偏移，并进入状态 13
    '('         偏移，并进入状态 15

    declarator  转到状态 20


状态 16

   68 declaration: type_specifier init_declarator_list . ';'
   70 init_declarator_list: init_declarator_list . ',' init_declarator

    ';'  偏移，并进入状态 21
    ','  偏移，并进入状态 22


状态 17

   69 init_declarator_list: init_declarator .

    $default  使用规则 69 以归约 (init_declarator_list)


状态 18

   71 init_declarator: declarator .
   72                | declarator . '=' initializer
   80 declarator: declarator . '[' assignment_expression ']'
   81           | declarator . '[' '*' ']'
   82           | declarator . '[' ']'
   83           | declarator . '(' wait_block parameter_list ')'
   84           | declarator . '(' identifier_list ')'
   85           | declarator . '(' ')'
  150 function_definition: type_specifier declarator . declaration_list compound_statement
  151                    | type_specifier declarator . compound_statement

    CHAR    偏移，并进入状态 1
    INT     偏移，并进入状态 2
    DOUBLE  偏移，并进入状态 3
    VOID    偏移，并进入状态 4
    BOOL    偏移，并进入状态 5
    '='     偏移，并进入状态 23
    '['     偏移，并进入状态 24
    '{'     偏移，并进入状态 25
    '('     偏移，并进入状态 26

    $default  使用规则 71 以归约 (init_declarator)

    declaration         转到状态 27
    type_specifier      转到状态 28
    compound_statement  转到状态 29
    declaration_list    转到状态 30


状态 19

  147 translation_unit: translation_unit external_declaration .

    $default  使用规则 147 以归约 (translation_unit)


状态 20

   79 declarator: '(' declarator . ')'
   80           | declarator . '[' assignment_expression ']'
   81           | declarator . '[' '*' ']'
   82           | declarator . '[' ']'
   83           | declarator . '(' wait_block parameter_list ')'
   84           | declarator . '(' identifier_list ')'
   85           | declarator . '(' ')'

    '['  偏移，并进入状态 24
    '('  偏移，并进入状态 26
    ')'  偏移，并进入状态 31


状态 21

   68 declaration: type_specifier init_declarator_list ';' .

    $default  使用规则 68 以归约 (declaration)


状态 22

   70 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  偏移，并进入状态 13
    '('         偏移，并进入状态 15

    init_declarator  转到状态 32
    declarator       转到状态 33


状态 23

   72 init_declarator: declarator '=' . initializer

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 45
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 61
    initializer                转到状态 62


状态 24

   80 declarator: declarator '[' . assignment_expression ']'
   81           | declarator '[' . '*' ']'
   82           | declarator '[' . ']'

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ']'              偏移，并进入状态 63
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '*'              偏移，并进入状态 64
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 65


状态 25

  124 compound_statement: '{' . '}'
  125                   | '{' . block_item_list '}'

    IDENTIFIER       偏移，并进入状态 66
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    CHAR             偏移，并进入状态 1
    INT              偏移，并进入状态 2
    DOUBLE           偏移，并进入状态 3
    VOID             偏移，并进入状态 4
    BOOL             偏移，并进入状态 5
    CASE             偏移，并进入状态 67
    IF               偏移，并进入状态 68
    SWITCH           偏移，并进入状态 69
    WHILE            偏移，并进入状态 70
    DO               偏移，并进入状态 71
    FOR              偏移，并进入状态 72
    GOTO             偏移，并进入状态 73
    CONTINUE         偏移，并进入状态 74
    BREAK            偏移，并进入状态 75
    RETURN           偏移，并进入状态 76
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ';'              偏移，并进入状态 77
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 25
    '}'              偏移，并进入状态 78
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 80
    declaration                转到状态 81
    type_specifier             转到状态 28
    statement                  转到状态 82
    labeled_statement          转到状态 83
    compound_statement         转到状态 84
    block_item_list            转到状态 85
    block_item                 转到状态 86
    expression_statement       转到状态 87
    selection_statement        转到状态 88
    iteration_statement        转到状态 89
    jump_statement             转到状态 90


状态 26

   83 declarator: declarator '(' . wait_block parameter_list ')'
   84           | declarator '(' . identifier_list ')'
   85           | declarator '(' . ')'

    IDENTIFIER  偏移，并进入状态 91
    ')'         偏移，并进入状态 92

    $default  使用规则 155 以归约 (wait_block)

    identifier_list  转到状态 93
    wait_block       转到状态 94


状态 27

  152 declaration_list: declaration .

    $default  使用规则 152 以归约 (declaration_list)


状态 28

   67 declaration: type_specifier . ';'
   68            | type_specifier . init_declarator_list ';'

    IDENTIFIER  偏移，并进入状态 13
    ';'         偏移，并进入状态 14
    '('         偏移，并进入状态 15

    init_declarator_list  转到状态 16
    init_declarator       转到状态 17
    declarator            转到状态 33


状态 29

  151 function_definition: type_specifier declarator compound_statement .

    $default  使用规则 151 以归约 (function_definition)


状态 30

  150 function_definition: type_specifier declarator declaration_list . compound_statement
  153 declaration_list: declaration_list . declaration

    CHAR    偏移，并进入状态 1
    INT     偏移，并进入状态 2
    DOUBLE  偏移，并进入状态 3
    VOID    偏移，并进入状态 4
    BOOL    偏移，并进入状态 5
    '{'     偏移，并进入状态 25

    declaration         转到状态 95
    type_specifier      转到状态 28
    compound_statement  转到状态 96


状态 31

   79 declarator: '(' declarator ')' .

    $default  使用规则 79 以归约 (declarator)


状态 32

   70 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  使用规则 70 以归约 (init_declarator_list)


状态 33

   71 init_declarator: declarator .
   72                | declarator . '=' initializer
   80 declarator: declarator . '[' assignment_expression ']'
   81           | declarator . '[' '*' ']'
   82           | declarator . '[' ']'
   83           | declarator . '(' wait_block parameter_list ')'
   84           | declarator . '(' identifier_list ')'
   85           | declarator . '(' ')'

    '='  偏移，并进入状态 23
    '['  偏移，并进入状态 24
    '('  偏移，并进入状态 26

    $default  使用规则 71 以归约 (init_declarator)


状态 34

    2 primary_expression: IDENTIFIER .

    $default  使用规则 2 以归约 (primary_expression)


状态 35

    5 primary_expression: CONSTANT_INT .

    $default  使用规则 5 以归约 (primary_expression)


状态 36

    6 primary_expression: CONSTANT_DOUBLE .

    $default  使用规则 6 以归约 (primary_expression)


状态 37

   17 unary_expression: INC_OP . unary_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression  转到状态 47
    postfix_expression  转到状态 48
    unary_expression    转到状态 97
    unary_operator      转到状态 50


状态 38

   18 unary_expression: DEC_OP . unary_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression  转到状态 47
    postfix_expression  转到状态 48
    unary_expression    转到状态 98
    unary_operator      转到状态 50


状态 39

    3 primary_expression: TRUE .

    $default  使用规则 3 以归约 (primary_expression)


状态 40

    4 primary_expression: FALSE .

    $default  使用规则 4 以归约 (primary_expression)


状态 41

   23 unary_operator: '!' .

    $default  使用规则 23 以归约 (unary_operator)


状态 42

   22 unary_operator: '~' .

    $default  使用规则 22 以归约 (unary_operator)


状态 43

   21 unary_operator: '-' .

    $default  使用规则 21 以归约 (unary_operator)


状态 44

   20 unary_operator: '+' .

    $default  使用规则 20 以归约 (unary_operator)


状态 45

  105 initializer: '{' . child_block initializer_list '}' father_block
  106            | '{' . child_block initializer_list ',' '}' father_block

    $default  使用规则 154 以归约 (child_block)

    child_block  转到状态 99


状态 46

    7 primary_expression: '(' . expression ')'

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 100


状态 47

    8 postfix_expression: primary_expression .

    $default  使用规则 8 以归约 (postfix_expression)


状态 48

    9 postfix_expression: postfix_expression . '[' expression ']'
   10                   | postfix_expression . '(' ')'
   11                   | postfix_expression . '(' argument_expression_list ')'
   12                   | postfix_expression . INC_OP
   13                   | postfix_expression . DEC_OP
   16 unary_expression: postfix_expression .

    INC_OP  偏移，并进入状态 101
    DEC_OP  偏移，并进入状态 102
    '['     偏移，并进入状态 103
    '('     偏移，并进入状态 104

    $default  使用规则 16 以归约 (unary_expression)


状态 49

   24 multiplicative_expression: unary_expression .
   53 assignment_expression: unary_expression . assignment_operator assignment_expression

    MUL_ASSIGN    偏移，并进入状态 105
    DIV_ASSIGN    偏移，并进入状态 106
    MOD_ASSIGN    偏移，并进入状态 107
    ADD_ASSIGN    偏移，并进入状态 108
    SUB_ASSIGN    偏移，并进入状态 109
    LEFT_ASSIGN   偏移，并进入状态 110
    RIGHT_ASSIGN  偏移，并进入状态 111
    AND_ASSIGN    偏移，并进入状态 112
    XOR_ASSIGN    偏移，并进入状态 113
    OR_ASSIGN     偏移，并进入状态 114
    '='           偏移，并进入状态 115

    $default  使用规则 24 以归约 (multiplicative_expression)

    assignment_operator  转到状态 116


状态 50

   19 unary_expression: unary_operator . unary_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression  转到状态 47
    postfix_expression  转到状态 48
    unary_expression    转到状态 117
    unary_operator      转到状态 50


状态 51

   25 multiplicative_expression: multiplicative_expression . '*' unary_expression
   26                          | multiplicative_expression . '/' unary_expression
   27                          | multiplicative_expression . '%' unary_expression
   28 additive_expression: multiplicative_expression .

    '*'  偏移，并进入状态 118
    '/'  偏移，并进入状态 119
    '%'  偏移，并进入状态 120

    $default  使用规则 28 以归约 (additive_expression)


状态 52

   29 additive_expression: additive_expression . '+' multiplicative_expression
   30                    | additive_expression . '-' multiplicative_expression
   31 shift_expression: additive_expression .

    '-'  偏移，并进入状态 121
    '+'  偏移，并进入状态 122

    $default  使用规则 31 以归约 (shift_expression)


状态 53

   32 shift_expression: shift_expression . LEFT_OP additive_expression
   33                 | shift_expression . RIGHT_OP additive_expression
   34 relational_expression: shift_expression .

    LEFT_OP   偏移，并进入状态 123
    RIGHT_OP  偏移，并进入状态 124

    $default  使用规则 34 以归约 (relational_expression)


状态 54

   35 relational_expression: relational_expression . '<' shift_expression
   36                      | relational_expression . '>' shift_expression
   37                      | relational_expression . LE_OP shift_expression
   38                      | relational_expression . GE_OP shift_expression
   39 equality_expression: relational_expression .

    LE_OP  偏移，并进入状态 125
    GE_OP  偏移，并进入状态 126
    '<'    偏移，并进入状态 127
    '>'    偏移，并进入状态 128

    $default  使用规则 39 以归约 (equality_expression)


状态 55

   40 equality_expression: equality_expression . EQ_OP relational_expression
   41                    | equality_expression . NE_OP relational_expression
   42 and_expression: equality_expression .

    EQ_OP  偏移，并进入状态 129
    NE_OP  偏移，并进入状态 130

    $default  使用规则 42 以归约 (and_expression)


状态 56

   43 and_expression: and_expression . '&' equality_expression
   44 exclusive_or_expression: and_expression .

    '&'  偏移，并进入状态 131

    $default  使用规则 44 以归约 (exclusive_or_expression)


状态 57

   45 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   46 inclusive_or_expression: exclusive_or_expression .

    '^'  偏移，并进入状态 132

    $default  使用规则 46 以归约 (inclusive_or_expression)


状态 58

   47 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   48 logical_and_expression: inclusive_or_expression .

    '|'  偏移，并进入状态 133

    $default  使用规则 48 以归约 (logical_and_expression)


状态 59

   49 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
   50 logical_or_expression: logical_and_expression .

    AND_OP  偏移，并进入状态 134

    $default  使用规则 50 以归约 (logical_or_expression)


状态 60

   51 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   52 assignment_expression: logical_or_expression .

    OR_OP  偏移，并进入状态 135

    $default  使用规则 52 以归约 (assignment_expression)


状态 61

  104 initializer: assignment_expression .

    $default  使用规则 104 以归约 (initializer)


状态 62

   72 init_declarator: declarator '=' initializer .

    $default  使用规则 72 以归约 (init_declarator)


状态 63

   82 declarator: declarator '[' ']' .

    $default  使用规则 82 以归约 (declarator)


状态 64

   81 declarator: declarator '[' '*' . ']'

    ']'  偏移，并进入状态 136


状态 65

   80 declarator: declarator '[' assignment_expression . ']'

    ']'  偏移，并进入状态 137


状态 66

    2 primary_expression: IDENTIFIER .
  122 labeled_statement: IDENTIFIER . ':' statement

    ':'  偏移，并进入状态 138

    $default  使用规则 2 以归约 (primary_expression)


状态 67

  123 labeled_statement: CASE . logical_or_expression ':' statement

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 139
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 140


状态 68

  132 selection_statement: IF . '(' expression ')' statement
  133                    | IF . '(' expression ')' statement ELSE statement

    '('  偏移，并进入状态 141


状态 69

  134 selection_statement: SWITCH . '(' expression ')' statement

    '('  偏移，并进入状态 142


状态 70

  135 iteration_statement: WHILE . '(' expression ')' statement

    '('  偏移，并进入状态 143


状态 71

  136 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER       偏移，并进入状态 66
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    CASE             偏移，并进入状态 67
    IF               偏移，并进入状态 68
    SWITCH           偏移，并进入状态 69
    WHILE            偏移，并进入状态 70
    DO               偏移，并进入状态 71
    FOR              偏移，并进入状态 72
    GOTO             偏移，并进入状态 73
    CONTINUE         偏移，并进入状态 74
    BREAK            偏移，并进入状态 75
    RETURN           偏移，并进入状态 76
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ';'              偏移，并进入状态 77
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 25
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 80
    statement                  转到状态 144
    labeled_statement          转到状态 83
    compound_statement         转到状态 84
    expression_statement       转到状态 87
    selection_statement        转到状态 88
    iteration_statement        转到状态 89
    jump_statement             转到状态 90


状态 72

  137 iteration_statement: FOR . '(' expression_statement expression_statement ')' statement
  138                    | FOR . '(' expression_statement expression_statement expression ')' statement
  139                    | FOR . '(' declaration expression_statement ')' statement
  140                    | FOR . '(' declaration expression_statement expression ')' statement

    '('  偏移，并进入状态 145


状态 73

  141 jump_statement: GOTO . IDENTIFIER ';'

    IDENTIFIER  偏移，并进入状态 146


状态 74

  142 jump_statement: CONTINUE . ';'

    ';'  偏移，并进入状态 147


状态 75

  143 jump_statement: BREAK . ';'

    ';'  偏移，并进入状态 148


状态 76

  144 jump_statement: RETURN . ';'
  145               | RETURN . expression ';'

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ';'              偏移，并进入状态 149
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 150


状态 77

  130 expression_statement: ';' .

    $default  使用规则 130 以归约 (expression_statement)


状态 78

  124 compound_statement: '{' '}' .

    $default  使用规则 124 以归约 (compound_statement)


状态 79

   65 expression: assignment_expression .

    $default  使用规则 65 以归约 (expression)


状态 80

   66 expression: expression . ',' assignment_expression
  131 expression_statement: expression . ';'

    ';'  偏移，并进入状态 151
    ','  偏移，并进入状态 152


状态 81

  128 block_item: declaration .

    $default  使用规则 128 以归约 (block_item)


状态 82

  129 block_item: statement .

    $default  使用规则 129 以归约 (block_item)


状态 83

  116 statement: labeled_statement .

    $default  使用规则 116 以归约 (statement)


状态 84

  117 statement: compound_statement .

    $default  使用规则 117 以归约 (statement)


状态 85

  125 compound_statement: '{' block_item_list . '}'
  127 block_item_list: block_item_list . block_item

    IDENTIFIER       偏移，并进入状态 66
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    CHAR             偏移，并进入状态 1
    INT              偏移，并进入状态 2
    DOUBLE           偏移，并进入状态 3
    VOID             偏移，并进入状态 4
    BOOL             偏移，并进入状态 5
    CASE             偏移，并进入状态 67
    IF               偏移，并进入状态 68
    SWITCH           偏移，并进入状态 69
    WHILE            偏移，并进入状态 70
    DO               偏移，并进入状态 71
    FOR              偏移，并进入状态 72
    GOTO             偏移，并进入状态 73
    CONTINUE         偏移，并进入状态 74
    BREAK            偏移，并进入状态 75
    RETURN           偏移，并进入状态 76
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ';'              偏移，并进入状态 77
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 25
    '}'              偏移，并进入状态 153
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 80
    declaration                转到状态 81
    type_specifier             转到状态 28
    statement                  转到状态 82
    labeled_statement          转到状态 83
    compound_statement         转到状态 84
    block_item                 转到状态 154
    expression_statement       转到状态 87
    selection_statement        转到状态 88
    iteration_statement        转到状态 89
    jump_statement             转到状态 90


状态 86

  126 block_item_list: block_item .

    $default  使用规则 126 以归约 (block_item_list)


状态 87

  118 statement: expression_statement .

    $default  使用规则 118 以归约 (statement)


状态 88

  119 statement: selection_statement .

    $default  使用规则 119 以归约 (statement)


状态 89

  120 statement: iteration_statement .

    $default  使用规则 120 以归约 (statement)


状态 90

  121 statement: jump_statement .

    $default  使用规则 121 以归约 (statement)


状态 91

   91 identifier_list: IDENTIFIER .

    $default  使用规则 91 以归约 (identifier_list)


状态 92

   85 declarator: declarator '(' ')' .

    $default  使用规则 85 以归约 (declarator)


状态 93

   84 declarator: declarator '(' identifier_list . ')'
   92 identifier_list: identifier_list . ',' IDENTIFIER

    ','  偏移，并进入状态 155
    ')'  偏移，并进入状态 156


状态 94

   83 declarator: declarator '(' wait_block . parameter_list ')'

    CHAR    偏移，并进入状态 1
    INT     偏移，并进入状态 2
    DOUBLE  偏移，并进入状态 3
    VOID    偏移，并进入状态 4
    BOOL    偏移，并进入状态 5

    type_specifier         转到状态 157
    parameter_list         转到状态 158
    parameter_declaration  转到状态 159


状态 95

  153 declaration_list: declaration_list declaration .

    $default  使用规则 153 以归约 (declaration_list)


状态 96

  150 function_definition: type_specifier declarator declaration_list compound_statement .

    $default  使用规则 150 以归约 (function_definition)


状态 97

   17 unary_expression: INC_OP unary_expression .

    $default  使用规则 17 以归约 (unary_expression)


状态 98

   18 unary_expression: DEC_OP unary_expression .

    $default  使用规则 18 以归约 (unary_expression)


状态 99

  105 initializer: '{' child_block . initializer_list '}' father_block
  106            | '{' child_block . initializer_list ',' '}' father_block

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '['              偏移，并进入状态 160
    '.'              偏移，并进入状态 161
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 45
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 61
    initializer                转到状态 162
    initializer_list           转到状态 163
    designation                转到状态 164
    designator_list            转到状态 165
    designator                 转到状态 166


状态 100

    7 primary_expression: '(' expression . ')'
   66 expression: expression . ',' assignment_expression

    ','  偏移，并进入状态 152
    ')'  偏移，并进入状态 167


状态 101

   12 postfix_expression: postfix_expression INC_OP .

    $default  使用规则 12 以归约 (postfix_expression)


状态 102

   13 postfix_expression: postfix_expression DEC_OP .

    $default  使用规则 13 以归约 (postfix_expression)


状态 103

    9 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 168


状态 104

   10 postfix_expression: postfix_expression '(' . ')'
   11                   | postfix_expression '(' . argument_expression_list ')'

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46
    ')'              偏移，并进入状态 169

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    argument_expression_list   转到状态 170
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 171


状态 105

   55 assignment_operator: MUL_ASSIGN .

    $default  使用规则 55 以归约 (assignment_operator)


状态 106

   56 assignment_operator: DIV_ASSIGN .

    $default  使用规则 56 以归约 (assignment_operator)


状态 107

   57 assignment_operator: MOD_ASSIGN .

    $default  使用规则 57 以归约 (assignment_operator)


状态 108

   58 assignment_operator: ADD_ASSIGN .

    $default  使用规则 58 以归约 (assignment_operator)


状态 109

   59 assignment_operator: SUB_ASSIGN .

    $default  使用规则 59 以归约 (assignment_operator)


状态 110

   60 assignment_operator: LEFT_ASSIGN .

    $default  使用规则 60 以归约 (assignment_operator)


状态 111

   61 assignment_operator: RIGHT_ASSIGN .

    $default  使用规则 61 以归约 (assignment_operator)


状态 112

   62 assignment_operator: AND_ASSIGN .

    $default  使用规则 62 以归约 (assignment_operator)


状态 113

   63 assignment_operator: XOR_ASSIGN .

    $default  使用规则 63 以归约 (assignment_operator)


状态 114

   64 assignment_operator: OR_ASSIGN .

    $default  使用规则 64 以归约 (assignment_operator)


状态 115

   54 assignment_operator: '=' .

    $default  使用规则 54 以归约 (assignment_operator)


状态 116

   53 assignment_expression: unary_expression assignment_operator . assignment_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 172


状态 117

   19 unary_expression: unary_operator unary_expression .

    $default  使用规则 19 以归约 (unary_expression)


状态 118

   25 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression  转到状态 47
    postfix_expression  转到状态 48
    unary_expression    转到状态 173
    unary_operator      转到状态 50


状态 119

   26 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression  转到状态 47
    postfix_expression  转到状态 48
    unary_expression    转到状态 174
    unary_operator      转到状态 50


状态 120

   27 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression  转到状态 47
    postfix_expression  转到状态 48
    unary_expression    转到状态 175
    unary_operator      转到状态 50


状态 121

   30 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 139
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 176


状态 122

   29 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 139
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 177


状态 123

   32 shift_expression: shift_expression LEFT_OP . additive_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 139
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 178


状态 124

   33 shift_expression: shift_expression RIGHT_OP . additive_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 139
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 179


状态 125

   37 relational_expression: relational_expression LE_OP . shift_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 139
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 180


状态 126

   38 relational_expression: relational_expression GE_OP . shift_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 139
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 181


状态 127

   35 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 139
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 182


状态 128

   36 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 139
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 183


状态 129

   40 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 139
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 184


状态 130

   41 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 139
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 185


状态 131

   43 and_expression: and_expression '&' . equality_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 139
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 186


状态 132

   45 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 139
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 187


状态 133

   47 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 139
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 188


状态 134

   49 logical_and_expression: logical_and_expression AND_OP . inclusive_or_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 139
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 189


状态 135

   51 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 139
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 190


状态 136

   81 declarator: declarator '[' '*' ']' .

    $default  使用规则 81 以归约 (declarator)


状态 137

   80 declarator: declarator '[' assignment_expression ']' .

    $default  使用规则 80 以归约 (declarator)


状态 138

  122 labeled_statement: IDENTIFIER ':' . statement

    IDENTIFIER       偏移，并进入状态 66
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    CASE             偏移，并进入状态 67
    IF               偏移，并进入状态 68
    SWITCH           偏移，并进入状态 69
    WHILE            偏移，并进入状态 70
    DO               偏移，并进入状态 71
    FOR              偏移，并进入状态 72
    GOTO             偏移，并进入状态 73
    CONTINUE         偏移，并进入状态 74
    BREAK            偏移，并进入状态 75
    RETURN           偏移，并进入状态 76
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ';'              偏移，并进入状态 77
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 25
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 80
    statement                  转到状态 191
    labeled_statement          转到状态 83
    compound_statement         转到状态 84
    expression_statement       转到状态 87
    selection_statement        转到状态 88
    iteration_statement        转到状态 89
    jump_statement             转到状态 90


状态 139

   24 multiplicative_expression: unary_expression .

    $default  使用规则 24 以归约 (multiplicative_expression)


状态 140

   51 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
  123 labeled_statement: CASE logical_or_expression . ':' statement

    OR_OP  偏移，并进入状态 135
    ':'    偏移，并进入状态 192


状态 141

  132 selection_statement: IF '(' . expression ')' statement
  133                    | IF '(' . expression ')' statement ELSE statement

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 193


状态 142

  134 selection_statement: SWITCH '(' . expression ')' statement

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 194


状态 143

  135 iteration_statement: WHILE '(' . expression ')' statement

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 195


状态 144

  136 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  偏移，并进入状态 196


状态 145

  137 iteration_statement: FOR '(' . expression_statement expression_statement ')' statement
  138                    | FOR '(' . expression_statement expression_statement expression ')' statement
  139                    | FOR '(' . declaration expression_statement ')' statement
  140                    | FOR '(' . declaration expression_statement expression ')' statement

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    CHAR             偏移，并进入状态 1
    INT              偏移，并进入状态 2
    DOUBLE           偏移，并进入状态 3
    VOID             偏移，并进入状态 4
    BOOL             偏移，并进入状态 5
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ';'              偏移，并进入状态 77
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 80
    declaration                转到状态 197
    type_specifier             转到状态 28
    expression_statement       转到状态 198


状态 146

  141 jump_statement: GOTO IDENTIFIER . ';'

    ';'  偏移，并进入状态 199


状态 147

  142 jump_statement: CONTINUE ';' .

    $default  使用规则 142 以归约 (jump_statement)


状态 148

  143 jump_statement: BREAK ';' .

    $default  使用规则 143 以归约 (jump_statement)


状态 149

  144 jump_statement: RETURN ';' .

    $default  使用规则 144 以归约 (jump_statement)


状态 150

   66 expression: expression . ',' assignment_expression
  145 jump_statement: RETURN expression . ';'

    ';'  偏移，并进入状态 200
    ','  偏移，并进入状态 152


状态 151

  131 expression_statement: expression ';' .

    $default  使用规则 131 以归约 (expression_statement)


状态 152

   66 expression: expression ',' . assignment_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 201


状态 153

  125 compound_statement: '{' block_item_list '}' .

    $default  使用规则 125 以归约 (compound_statement)


状态 154

  127 block_item_list: block_item_list block_item .

    $default  使用规则 127 以归约 (block_item_list)


状态 155

   92 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  偏移，并进入状态 202


状态 156

   84 declarator: declarator '(' identifier_list ')' .

    $default  使用规则 84 以归约 (declarator)


状态 157

   88 parameter_declaration: type_specifier . declarator
   89                      | type_specifier . abstract_declarator
   90                      | type_specifier .

    IDENTIFIER  偏移，并进入状态 13
    '['         偏移，并进入状态 203
    '('         偏移，并进入状态 204

    $default  使用规则 90 以归约 (parameter_declaration)

    declarator           转到状态 205
    abstract_declarator  转到状态 206


状态 158

   83 declarator: declarator '(' wait_block parameter_list . ')'
   87 parameter_list: parameter_list . ',' parameter_declaration

    ','  偏移，并进入状态 207
    ')'  偏移，并进入状态 208


状态 159

   86 parameter_list: parameter_declaration .

    $default  使用规则 86 以归约 (parameter_list)


状态 160

  114 designator: '[' . logical_or_expression ']'

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 139
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 209


状态 161

  115 designator: '.' . IDENTIFIER

    IDENTIFIER  偏移，并进入状态 210


状态 162

  107 initializer_list: initializer .

    $default  使用规则 107 以归约 (initializer_list)


状态 163

  105 initializer: '{' child_block initializer_list . '}' father_block
  106            | '{' child_block initializer_list . ',' '}' father_block
  109 initializer_list: initializer_list . ',' initializer
  110                 | initializer_list . ',' designation initializer

    ','  偏移，并进入状态 211
    '}'  偏移，并进入状态 212


状态 164

  108 initializer_list: designation . initializer

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 45
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 61
    initializer                转到状态 213


状态 165

  111 designation: designator_list . '='
  113 designator_list: designator_list . designator

    '='  偏移，并进入状态 214
    '['  偏移，并进入状态 160
    '.'  偏移，并进入状态 161

    designator  转到状态 215


状态 166

  112 designator_list: designator .

    $default  使用规则 112 以归约 (designator_list)


状态 167

    7 primary_expression: '(' expression ')' .

    $default  使用规则 7 以归约 (primary_expression)


状态 168

    9 postfix_expression: postfix_expression '[' expression . ']'
   66 expression: expression . ',' assignment_expression

    ','  偏移，并进入状态 152
    ']'  偏移，并进入状态 216


状态 169

   10 postfix_expression: postfix_expression '(' ')' .

    $default  使用规则 10 以归约 (postfix_expression)


状态 170

   11 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   15 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  偏移，并进入状态 217
    ')'  偏移，并进入状态 218


状态 171

   14 argument_expression_list: assignment_expression .

    $default  使用规则 14 以归约 (argument_expression_list)


状态 172

   53 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  使用规则 53 以归约 (assignment_expression)


状态 173

   25 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  使用规则 25 以归约 (multiplicative_expression)


状态 174

   26 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  使用规则 26 以归约 (multiplicative_expression)


状态 175

   27 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  使用规则 27 以归约 (multiplicative_expression)


状态 176

   25 multiplicative_expression: multiplicative_expression . '*' unary_expression
   26                          | multiplicative_expression . '/' unary_expression
   27                          | multiplicative_expression . '%' unary_expression
   30 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  偏移，并进入状态 118
    '/'  偏移，并进入状态 119
    '%'  偏移，并进入状态 120

    $default  使用规则 30 以归约 (additive_expression)


状态 177

   25 multiplicative_expression: multiplicative_expression . '*' unary_expression
   26                          | multiplicative_expression . '/' unary_expression
   27                          | multiplicative_expression . '%' unary_expression
   29 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  偏移，并进入状态 118
    '/'  偏移，并进入状态 119
    '%'  偏移，并进入状态 120

    $default  使用规则 29 以归约 (additive_expression)


状态 178

   29 additive_expression: additive_expression . '+' multiplicative_expression
   30                    | additive_expression . '-' multiplicative_expression
   32 shift_expression: shift_expression LEFT_OP additive_expression .

    '-'  偏移，并进入状态 121
    '+'  偏移，并进入状态 122

    $default  使用规则 32 以归约 (shift_expression)


状态 179

   29 additive_expression: additive_expression . '+' multiplicative_expression
   30                    | additive_expression . '-' multiplicative_expression
   33 shift_expression: shift_expression RIGHT_OP additive_expression .

    '-'  偏移，并进入状态 121
    '+'  偏移，并进入状态 122

    $default  使用规则 33 以归约 (shift_expression)


状态 180

   32 shift_expression: shift_expression . LEFT_OP additive_expression
   33                 | shift_expression . RIGHT_OP additive_expression
   37 relational_expression: relational_expression LE_OP shift_expression .

    LEFT_OP   偏移，并进入状态 123
    RIGHT_OP  偏移，并进入状态 124

    $default  使用规则 37 以归约 (relational_expression)


状态 181

   32 shift_expression: shift_expression . LEFT_OP additive_expression
   33                 | shift_expression . RIGHT_OP additive_expression
   38 relational_expression: relational_expression GE_OP shift_expression .

    LEFT_OP   偏移，并进入状态 123
    RIGHT_OP  偏移，并进入状态 124

    $default  使用规则 38 以归约 (relational_expression)


状态 182

   32 shift_expression: shift_expression . LEFT_OP additive_expression
   33                 | shift_expression . RIGHT_OP additive_expression
   35 relational_expression: relational_expression '<' shift_expression .

    LEFT_OP   偏移，并进入状态 123
    RIGHT_OP  偏移，并进入状态 124

    $default  使用规则 35 以归约 (relational_expression)


状态 183

   32 shift_expression: shift_expression . LEFT_OP additive_expression
   33                 | shift_expression . RIGHT_OP additive_expression
   36 relational_expression: relational_expression '>' shift_expression .

    LEFT_OP   偏移，并进入状态 123
    RIGHT_OP  偏移，并进入状态 124

    $default  使用规则 36 以归约 (relational_expression)


状态 184

   35 relational_expression: relational_expression . '<' shift_expression
   36                      | relational_expression . '>' shift_expression
   37                      | relational_expression . LE_OP shift_expression
   38                      | relational_expression . GE_OP shift_expression
   40 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  偏移，并进入状态 125
    GE_OP  偏移，并进入状态 126
    '<'    偏移，并进入状态 127
    '>'    偏移，并进入状态 128

    $default  使用规则 40 以归约 (equality_expression)


状态 185

   35 relational_expression: relational_expression . '<' shift_expression
   36                      | relational_expression . '>' shift_expression
   37                      | relational_expression . LE_OP shift_expression
   38                      | relational_expression . GE_OP shift_expression
   41 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  偏移，并进入状态 125
    GE_OP  偏移，并进入状态 126
    '<'    偏移，并进入状态 127
    '>'    偏移，并进入状态 128

    $default  使用规则 41 以归约 (equality_expression)


状态 186

   40 equality_expression: equality_expression . EQ_OP relational_expression
   41                    | equality_expression . NE_OP relational_expression
   43 and_expression: and_expression '&' equality_expression .

    EQ_OP  偏移，并进入状态 129
    NE_OP  偏移，并进入状态 130

    $default  使用规则 43 以归约 (and_expression)


状态 187

   43 and_expression: and_expression . '&' equality_expression
   45 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  偏移，并进入状态 131

    $default  使用规则 45 以归约 (exclusive_or_expression)


状态 188

   45 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   47 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  偏移，并进入状态 132

    $default  使用规则 47 以归约 (inclusive_or_expression)


状态 189

   47 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   49 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression .

    '|'  偏移，并进入状态 133

    $default  使用规则 49 以归约 (logical_and_expression)


状态 190

   49 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
   51 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  偏移，并进入状态 134

    $default  使用规则 51 以归约 (logical_or_expression)


状态 191

  122 labeled_statement: IDENTIFIER ':' statement .

    $default  使用规则 122 以归约 (labeled_statement)


状态 192

  123 labeled_statement: CASE logical_or_expression ':' . statement

    IDENTIFIER       偏移，并进入状态 66
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    CASE             偏移，并进入状态 67
    IF               偏移，并进入状态 68
    SWITCH           偏移，并进入状态 69
    WHILE            偏移，并进入状态 70
    DO               偏移，并进入状态 71
    FOR              偏移，并进入状态 72
    GOTO             偏移，并进入状态 73
    CONTINUE         偏移，并进入状态 74
    BREAK            偏移，并进入状态 75
    RETURN           偏移，并进入状态 76
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ';'              偏移，并进入状态 77
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 25
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 80
    statement                  转到状态 219
    labeled_statement          转到状态 83
    compound_statement         转到状态 84
    expression_statement       转到状态 87
    selection_statement        转到状态 88
    iteration_statement        转到状态 89
    jump_statement             转到状态 90


状态 193

   66 expression: expression . ',' assignment_expression
  132 selection_statement: IF '(' expression . ')' statement
  133                    | IF '(' expression . ')' statement ELSE statement

    ','  偏移，并进入状态 152
    ')'  偏移，并进入状态 220


状态 194

   66 expression: expression . ',' assignment_expression
  134 selection_statement: SWITCH '(' expression . ')' statement

    ','  偏移，并进入状态 152
    ')'  偏移，并进入状态 221


状态 195

   66 expression: expression . ',' assignment_expression
  135 iteration_statement: WHILE '(' expression . ')' statement

    ','  偏移，并进入状态 152
    ')'  偏移，并进入状态 222


状态 196

  136 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  偏移，并进入状态 223


状态 197

  139 iteration_statement: FOR '(' declaration . expression_statement ')' statement
  140                    | FOR '(' declaration . expression_statement expression ')' statement

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ';'              偏移，并进入状态 77
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 80
    expression_statement       转到状态 224


状态 198

  137 iteration_statement: FOR '(' expression_statement . expression_statement ')' statement
  138                    | FOR '(' expression_statement . expression_statement expression ')' statement

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ';'              偏移，并进入状态 77
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 80
    expression_statement       转到状态 225


状态 199

  141 jump_statement: GOTO IDENTIFIER ';' .

    $default  使用规则 141 以归约 (jump_statement)


状态 200

  145 jump_statement: RETURN expression ';' .

    $default  使用规则 145 以归约 (jump_statement)


状态 201

   66 expression: expression ',' assignment_expression .

    $default  使用规则 66 以归约 (expression)


状态 202

   92 identifier_list: identifier_list ',' IDENTIFIER .

    $default  使用规则 92 以归约 (identifier_list)


状态 203

   94 abstract_declarator: '[' . ']'
   95                    | '[' . assignment_expression ']'
   98                    | '[' . '*' ']'

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ']'              偏移，并进入状态 226
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '*'              偏移，并进入状态 227
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 228


状态 204

   79 declarator: '(' . declarator ')'
   93 abstract_declarator: '(' . abstract_declarator ')'
  100                    | '(' . ')'
  101                    | '(' . parameter_list ')'

    IDENTIFIER  偏移，并进入状态 13
    CHAR        偏移，并进入状态 1
    INT         偏移，并进入状态 2
    DOUBLE      偏移，并进入状态 3
    VOID        偏移，并进入状态 4
    BOOL        偏移，并进入状态 5
    '['         偏移，并进入状态 203
    '('         偏移，并进入状态 204
    ')'         偏移，并进入状态 229

    type_specifier         转到状态 157
    declarator             转到状态 20
    parameter_list         转到状态 230
    parameter_declaration  转到状态 159
    abstract_declarator    转到状态 231


状态 205

   80 declarator: declarator . '[' assignment_expression ']'
   81           | declarator . '[' '*' ']'
   82           | declarator . '[' ']'
   83           | declarator . '(' wait_block parameter_list ')'
   84           | declarator . '(' identifier_list ')'
   85           | declarator . '(' ')'
   88 parameter_declaration: type_specifier declarator .

    '['  偏移，并进入状态 24
    '('  偏移，并进入状态 26

    $default  使用规则 88 以归约 (parameter_declaration)


状态 206

   89 parameter_declaration: type_specifier abstract_declarator .
   96 abstract_declarator: abstract_declarator . '[' ']'
   97                    | abstract_declarator . '[' assignment_expression ']'
   99                    | abstract_declarator . '[' '*' ']'
  102                    | abstract_declarator . '(' ')'
  103                    | abstract_declarator . '(' parameter_list ')'

    '['  偏移，并进入状态 232
    '('  偏移，并进入状态 233

    $default  使用规则 89 以归约 (parameter_declaration)


状态 207

   87 parameter_list: parameter_list ',' . parameter_declaration

    CHAR    偏移，并进入状态 1
    INT     偏移，并进入状态 2
    DOUBLE  偏移，并进入状态 3
    VOID    偏移，并进入状态 4
    BOOL    偏移，并进入状态 5

    type_specifier         转到状态 157
    parameter_declaration  转到状态 234


状态 208

   83 declarator: declarator '(' wait_block parameter_list ')' .

    $default  使用规则 83 以归约 (declarator)


状态 209

   51 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
  114 designator: '[' logical_or_expression . ']'

    OR_OP  偏移，并进入状态 135
    ']'    偏移，并进入状态 235


状态 210

  115 designator: '.' IDENTIFIER .

    $default  使用规则 115 以归约 (designator)


状态 211

  106 initializer: '{' child_block initializer_list ',' . '}' father_block
  109 initializer_list: initializer_list ',' . initializer
  110                 | initializer_list ',' . designation initializer

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '['              偏移，并进入状态 160
    '.'              偏移，并进入状态 161
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 45
    '}'              偏移，并进入状态 236
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 61
    initializer                转到状态 237
    designation                转到状态 238
    designator_list            转到状态 165
    designator                 转到状态 166


状态 212

  105 initializer: '{' child_block initializer_list '}' . father_block

    $default  使用规则 156 以归约 (father_block)

    father_block  转到状态 239


状态 213

  108 initializer_list: designation initializer .

    $default  使用规则 108 以归约 (initializer_list)


状态 214

  111 designation: designator_list '=' .

    $default  使用规则 111 以归约 (designation)


状态 215

  113 designator_list: designator_list designator .

    $default  使用规则 113 以归约 (designator_list)


状态 216

    9 postfix_expression: postfix_expression '[' expression ']' .

    $default  使用规则 9 以归约 (postfix_expression)


状态 217

   15 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 240


状态 218

   11 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  使用规则 11 以归约 (postfix_expression)


状态 219

  123 labeled_statement: CASE logical_or_expression ':' statement .

    $default  使用规则 123 以归约 (labeled_statement)


状态 220

  132 selection_statement: IF '(' expression ')' . statement
  133                    | IF '(' expression ')' . statement ELSE statement

    IDENTIFIER       偏移，并进入状态 66
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    CASE             偏移，并进入状态 67
    IF               偏移，并进入状态 68
    SWITCH           偏移，并进入状态 69
    WHILE            偏移，并进入状态 70
    DO               偏移，并进入状态 71
    FOR              偏移，并进入状态 72
    GOTO             偏移，并进入状态 73
    CONTINUE         偏移，并进入状态 74
    BREAK            偏移，并进入状态 75
    RETURN           偏移，并进入状态 76
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ';'              偏移，并进入状态 77
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 25
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 80
    statement                  转到状态 241
    labeled_statement          转到状态 83
    compound_statement         转到状态 84
    expression_statement       转到状态 87
    selection_statement        转到状态 88
    iteration_statement        转到状态 89
    jump_statement             转到状态 90


状态 221

  134 selection_statement: SWITCH '(' expression ')' . statement

    IDENTIFIER       偏移，并进入状态 66
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    CASE             偏移，并进入状态 67
    IF               偏移，并进入状态 68
    SWITCH           偏移，并进入状态 69
    WHILE            偏移，并进入状态 70
    DO               偏移，并进入状态 71
    FOR              偏移，并进入状态 72
    GOTO             偏移，并进入状态 73
    CONTINUE         偏移，并进入状态 74
    BREAK            偏移，并进入状态 75
    RETURN           偏移，并进入状态 76
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ';'              偏移，并进入状态 77
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 25
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 80
    statement                  转到状态 242
    labeled_statement          转到状态 83
    compound_statement         转到状态 84
    expression_statement       转到状态 87
    selection_statement        转到状态 88
    iteration_statement        转到状态 89
    jump_statement             转到状态 90


状态 222

  135 iteration_statement: WHILE '(' expression ')' . statement

    IDENTIFIER       偏移，并进入状态 66
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    CASE             偏移，并进入状态 67
    IF               偏移，并进入状态 68
    SWITCH           偏移，并进入状态 69
    WHILE            偏移，并进入状态 70
    DO               偏移，并进入状态 71
    FOR              偏移，并进入状态 72
    GOTO             偏移，并进入状态 73
    CONTINUE         偏移，并进入状态 74
    BREAK            偏移，并进入状态 75
    RETURN           偏移，并进入状态 76
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ';'              偏移，并进入状态 77
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 25
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 80
    statement                  转到状态 243
    labeled_statement          转到状态 83
    compound_statement         转到状态 84
    expression_statement       转到状态 87
    selection_statement        转到状态 88
    iteration_statement        转到状态 89
    jump_statement             转到状态 90


状态 223

  136 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 244


状态 224

  139 iteration_statement: FOR '(' declaration expression_statement . ')' statement
  140                    | FOR '(' declaration expression_statement . expression ')' statement

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46
    ')'              偏移，并进入状态 245

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 246


状态 225

  137 iteration_statement: FOR '(' expression_statement expression_statement . ')' statement
  138                    | FOR '(' expression_statement expression_statement . expression ')' statement

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '('              偏移，并进入状态 46
    ')'              偏移，并进入状态 247

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 248


状态 226

   94 abstract_declarator: '[' ']' .

    $default  使用规则 94 以归约 (abstract_declarator)


状态 227

   98 abstract_declarator: '[' '*' . ']'

    ']'  偏移，并进入状态 249


状态 228

   95 abstract_declarator: '[' assignment_expression . ']'

    ']'  偏移，并进入状态 250


状态 229

  100 abstract_declarator: '(' ')' .

    $default  使用规则 100 以归约 (abstract_declarator)


状态 230

   87 parameter_list: parameter_list . ',' parameter_declaration
  101 abstract_declarator: '(' parameter_list . ')'

    ','  偏移，并进入状态 207
    ')'  偏移，并进入状态 251


状态 231

   93 abstract_declarator: '(' abstract_declarator . ')'
   96                    | abstract_declarator . '[' ']'
   97                    | abstract_declarator . '[' assignment_expression ']'
   99                    | abstract_declarator . '[' '*' ']'
  102                    | abstract_declarator . '(' ')'
  103                    | abstract_declarator . '(' parameter_list ')'

    '['  偏移，并进入状态 232
    '('  偏移，并进入状态 233
    ')'  偏移，并进入状态 252


状态 232

   96 abstract_declarator: abstract_declarator '[' . ']'
   97                    | abstract_declarator '[' . assignment_expression ']'
   99                    | abstract_declarator '[' . '*' ']'

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ']'              偏移，并进入状态 253
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '*'              偏移，并进入状态 254
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 255


状态 233

  102 abstract_declarator: abstract_declarator '(' . ')'
  103                    | abstract_declarator '(' . parameter_list ')'

    CHAR    偏移，并进入状态 1
    INT     偏移，并进入状态 2
    DOUBLE  偏移，并进入状态 3
    VOID    偏移，并进入状态 4
    BOOL    偏移，并进入状态 5
    ')'     偏移，并进入状态 256

    type_specifier         转到状态 157
    parameter_list         转到状态 257
    parameter_declaration  转到状态 159


状态 234

   87 parameter_list: parameter_list ',' parameter_declaration .

    $default  使用规则 87 以归约 (parameter_list)


状态 235

  114 designator: '[' logical_or_expression ']' .

    $default  使用规则 114 以归约 (designator)


状态 236

  106 initializer: '{' child_block initializer_list ',' '}' . father_block

    $default  使用规则 156 以归约 (father_block)

    father_block  转到状态 258


状态 237

  109 initializer_list: initializer_list ',' initializer .

    $default  使用规则 109 以归约 (initializer_list)


状态 238

  110 initializer_list: initializer_list ',' designation . initializer

    IDENTIFIER       偏移，并进入状态 34
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 45
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 61
    initializer                转到状态 259


状态 239

  105 initializer: '{' child_block initializer_list '}' father_block .

    $default  使用规则 105 以归约 (initializer)


状态 240

   15 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  使用规则 15 以归约 (argument_expression_list)


状态 241

  132 selection_statement: IF '(' expression ')' statement .
  133                    | IF '(' expression ')' statement . ELSE statement

    ELSE  偏移，并进入状态 260

    $default  使用规则 132 以归约 (selection_statement)


状态 242

  134 selection_statement: SWITCH '(' expression ')' statement .

    $default  使用规则 134 以归约 (selection_statement)


状态 243

  135 iteration_statement: WHILE '(' expression ')' statement .

    $default  使用规则 135 以归约 (iteration_statement)


状态 244

   66 expression: expression . ',' assignment_expression
  136 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ','  偏移，并进入状态 152
    ')'  偏移，并进入状态 261


状态 245

  139 iteration_statement: FOR '(' declaration expression_statement ')' . statement

    IDENTIFIER       偏移，并进入状态 66
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    CASE             偏移，并进入状态 67
    IF               偏移，并进入状态 68
    SWITCH           偏移，并进入状态 69
    WHILE            偏移，并进入状态 70
    DO               偏移，并进入状态 71
    FOR              偏移，并进入状态 72
    GOTO             偏移，并进入状态 73
    CONTINUE         偏移，并进入状态 74
    BREAK            偏移，并进入状态 75
    RETURN           偏移，并进入状态 76
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ';'              偏移，并进入状态 77
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 25
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 80
    statement                  转到状态 262
    labeled_statement          转到状态 83
    compound_statement         转到状态 84
    expression_statement       转到状态 87
    selection_statement        转到状态 88
    iteration_statement        转到状态 89
    jump_statement             转到状态 90


状态 246

   66 expression: expression . ',' assignment_expression
  140 iteration_statement: FOR '(' declaration expression_statement expression . ')' statement

    ','  偏移，并进入状态 152
    ')'  偏移，并进入状态 263


状态 247

  137 iteration_statement: FOR '(' expression_statement expression_statement ')' . statement

    IDENTIFIER       偏移，并进入状态 66
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    CASE             偏移，并进入状态 67
    IF               偏移，并进入状态 68
    SWITCH           偏移，并进入状态 69
    WHILE            偏移，并进入状态 70
    DO               偏移，并进入状态 71
    FOR              偏移，并进入状态 72
    GOTO             偏移，并进入状态 73
    CONTINUE         偏移，并进入状态 74
    BREAK            偏移，并进入状态 75
    RETURN           偏移，并进入状态 76
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ';'              偏移，并进入状态 77
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 25
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 80
    statement                  转到状态 264
    labeled_statement          转到状态 83
    compound_statement         转到状态 84
    expression_statement       转到状态 87
    selection_statement        转到状态 88
    iteration_statement        转到状态 89
    jump_statement             转到状态 90


状态 248

   66 expression: expression . ',' assignment_expression
  138 iteration_statement: FOR '(' expression_statement expression_statement expression . ')' statement

    ','  偏移，并进入状态 152
    ')'  偏移，并进入状态 265


状态 249

   98 abstract_declarator: '[' '*' ']' .

    $default  使用规则 98 以归约 (abstract_declarator)


状态 250

   95 abstract_declarator: '[' assignment_expression ']' .

    $default  使用规则 95 以归约 (abstract_declarator)


状态 251

  101 abstract_declarator: '(' parameter_list ')' .

    $default  使用规则 101 以归约 (abstract_declarator)


状态 252

   93 abstract_declarator: '(' abstract_declarator ')' .

    $default  使用规则 93 以归约 (abstract_declarator)


状态 253

   96 abstract_declarator: abstract_declarator '[' ']' .

    $default  使用规则 96 以归约 (abstract_declarator)


状态 254

   99 abstract_declarator: abstract_declarator '[' '*' . ']'

    ']'  偏移，并进入状态 266


状态 255

   97 abstract_declarator: abstract_declarator '[' assignment_expression . ']'

    ']'  偏移，并进入状态 267


状态 256

  102 abstract_declarator: abstract_declarator '(' ')' .

    $default  使用规则 102 以归约 (abstract_declarator)


状态 257

   87 parameter_list: parameter_list . ',' parameter_declaration
  103 abstract_declarator: abstract_declarator '(' parameter_list . ')'

    ','  偏移，并进入状态 207
    ')'  偏移，并进入状态 268


状态 258

  106 initializer: '{' child_block initializer_list ',' '}' father_block .

    $default  使用规则 106 以归约 (initializer)


状态 259

  110 initializer_list: initializer_list ',' designation initializer .

    $default  使用规则 110 以归约 (initializer_list)


状态 260

  133 selection_statement: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER       偏移，并进入状态 66
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    CASE             偏移，并进入状态 67
    IF               偏移，并进入状态 68
    SWITCH           偏移，并进入状态 69
    WHILE            偏移，并进入状态 70
    DO               偏移，并进入状态 71
    FOR              偏移，并进入状态 72
    GOTO             偏移，并进入状态 73
    CONTINUE         偏移，并进入状态 74
    BREAK            偏移，并进入状态 75
    RETURN           偏移，并进入状态 76
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ';'              偏移，并进入状态 77
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 25
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 80
    statement                  转到状态 269
    labeled_statement          转到状态 83
    compound_statement         转到状态 84
    expression_statement       转到状态 87
    selection_statement        转到状态 88
    iteration_statement        转到状态 89
    jump_statement             转到状态 90


状态 261

  136 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  偏移，并进入状态 270


状态 262

  139 iteration_statement: FOR '(' declaration expression_statement ')' statement .

    $default  使用规则 139 以归约 (iteration_statement)


状态 263

  140 iteration_statement: FOR '(' declaration expression_statement expression ')' . statement

    IDENTIFIER       偏移，并进入状态 66
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    CASE             偏移，并进入状态 67
    IF               偏移，并进入状态 68
    SWITCH           偏移，并进入状态 69
    WHILE            偏移，并进入状态 70
    DO               偏移，并进入状态 71
    FOR              偏移，并进入状态 72
    GOTO             偏移，并进入状态 73
    CONTINUE         偏移，并进入状态 74
    BREAK            偏移，并进入状态 75
    RETURN           偏移，并进入状态 76
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ';'              偏移，并进入状态 77
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 25
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 80
    statement                  转到状态 271
    labeled_statement          转到状态 83
    compound_statement         转到状态 84
    expression_statement       转到状态 87
    selection_statement        转到状态 88
    iteration_statement        转到状态 89
    jump_statement             转到状态 90


状态 264

  137 iteration_statement: FOR '(' expression_statement expression_statement ')' statement .

    $default  使用规则 137 以归约 (iteration_statement)


状态 265

  138 iteration_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    IDENTIFIER       偏移，并进入状态 66
    CONSTANT_INT     偏移，并进入状态 35
    CONSTANT_DOUBLE  偏移，并进入状态 36
    INC_OP           偏移，并进入状态 37
    DEC_OP           偏移，并进入状态 38
    CASE             偏移，并进入状态 67
    IF               偏移，并进入状态 68
    SWITCH           偏移，并进入状态 69
    WHILE            偏移，并进入状态 70
    DO               偏移，并进入状态 71
    FOR              偏移，并进入状态 72
    GOTO             偏移，并进入状态 73
    CONTINUE         偏移，并进入状态 74
    BREAK            偏移，并进入状态 75
    RETURN           偏移，并进入状态 76
    TRUE             偏移，并进入状态 39
    FALSE            偏移，并进入状态 40
    ';'              偏移，并进入状态 77
    '!'              偏移，并进入状态 41
    '~'              偏移，并进入状态 42
    '-'              偏移，并进入状态 43
    '+'              偏移，并进入状态 44
    '{'              偏移，并进入状态 25
    '('              偏移，并进入状态 46

    primary_expression         转到状态 47
    postfix_expression         转到状态 48
    unary_expression           转到状态 49
    unary_operator             转到状态 50
    multiplicative_expression  转到状态 51
    additive_expression        转到状态 52
    shift_expression           转到状态 53
    relational_expression      转到状态 54
    equality_expression        转到状态 55
    and_expression             转到状态 56
    exclusive_or_expression    转到状态 57
    inclusive_or_expression    转到状态 58
    logical_and_expression     转到状态 59
    logical_or_expression      转到状态 60
    assignment_expression      转到状态 79
    expression                 转到状态 80
    statement                  转到状态 272
    labeled_statement          转到状态 83
    compound_statement         转到状态 84
    expression_statement       转到状态 87
    selection_statement        转到状态 88
    iteration_statement        转到状态 89
    jump_statement             转到状态 90


状态 266

   99 abstract_declarator: abstract_declarator '[' '*' ']' .

    $default  使用规则 99 以归约 (abstract_declarator)


状态 267

   97 abstract_declarator: abstract_declarator '[' assignment_expression ']' .

    $default  使用规则 97 以归约 (abstract_declarator)


状态 268

  103 abstract_declarator: abstract_declarator '(' parameter_list ')' .

    $default  使用规则 103 以归约 (abstract_declarator)


状态 269

  133 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  使用规则 133 以归约 (selection_statement)


状态 270

  136 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  使用规则 136 以归约 (iteration_statement)


状态 271

  140 iteration_statement: FOR '(' declaration expression_statement expression ')' statement .

    $default  使用规则 140 以归约 (iteration_statement)


状态 272

  138 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $default  使用规则 138 以归约 (iteration_statement)
